var verify = require('verifyRecaptcha');
var arr_equal = require('array-equal');
var Db = require('Database');
module.exports = function(req, res, collection, is_login){
	if(is_login){
		// if(verify(req.body.CAPTCHA_RESPONSE_TOKEN)){
		var cursor, db_question;
		var question_in_total = req.body.ups.length;
		var correct, correct_option, solution, rank = 0, result = {
			ups: []
		};
		req.body.ups
				.forEach(function(client_upload_obj, client_upload_obj_index){
					console.log('postMethod.js req.body.ups.forEach obj')
					console.log(client_upload_obj)
					cursor = collection.find({
						"id": client_upload_obj.id
					});
					cursor.toArray(function(err, docs){
								if(err){
									console.log(err);
									res.end({
										message: 'sth went wrong!'
									});
									return;
								}
								if(docs.length === 0){
									res.end(JSON.stringify({
										message: 'no such question(id error)'
									}));
									return;
								}
								db_question = docs[0];
								correct = arr_equal(client_upload_obj.options, db_question.answer) && true;
								correct_option = db_question.answer;
								solution = db_question.solution;
								result.ups.push({
									id: client_upload_obj.id,
									correctOrNot: correct,
									correctOptions: correct_option,
									solution: solution
								});
								if(correct){
									rank += (100 / question_in_total);
									Db.db.collection('profiles').find({
										email: req.cookies.email
									}).toArray(function(err, docs){
										if(err){
											console.log(err);
											res.end(JSON.stringify({
												message: 'profile query error'
											}))
											return;
										}
										if(docs.length !== 1){
											res.end(JSON.stringify({
												message: 'profile.length!==1'
											}))
											return;
										}
										var doc = docs[0];
										var redoc = Object.assign({}, doc)
										redoc['AC'] = doc['AC'][client_upload_obj.id] ? doc['AC'] : doc['AC'].push(client_upload_obj.id) && doc['AC'];
										redoc['WA'] = doc['WA'].indexOf(client_upload_obj.id)!==-1 ? doc['WA'].splice(doc['WA'].indexOf(client_upload_obj.id), 1) && doc['WA'] : doc['WA'];
										Db.db.collection('profiles').updateOne({
											email: doc['email']
										}, redoc)
									})
								}else{                                       // These two segment of code are verrrrrrrrry similer.... i just don't want to make a function
									Db.db.collection('profiles').find({
										email: req.cookies.email
									}).toArray(function(err, docs){
										if(err){
											console.log(err);
											res.end(JSON.stringify({
												message: 'profile query error'
											}))
											return;
										}
										if(docs.length !== 1){
											res.end(JSON.stringify({
												message: 'profile.length!==1'
											}))
											return;
										}
										var doc = docs[0];
										var redoc = Object.assign({}, doc)
										if(!doc['AC'][client_upload_obj.id]){
											redoc['WA'] = doc['WA'][client_upload_obj.id] ? doc['WA'] : doc['WA'].push(client_upload_obj.id) && doc['WA'];
											Db.db.collection('profiles').updateOne({
												email: doc['email']
											}, redoc)
										}
									})
								}
								if(client_upload_obj_index === question_in_total - 1){
									result.rank = rank;
									res.end(JSON.stringify(result));
									return;
								}
							});
				});
		// }
	}else{
		res.end(JSON.stringify({message: 'you haven\'t login yet'}))
		return;
	}
};
