var config=require("informations.config");
var MongoUrl="mongodb://"+config.user+":"+config.password+"@"+config.host+":"+config.port+"/"+config.db_name;
var mongodb=require('mongodb');
var MongoClient=mongodb.MongoClient;
var nodemailer=require('nodemailer');
var smtpConfig = {
    host: 'smtp.mailgun.org',
    port: 587,
    secure: false, // use SSL
    auth: {
        user: 'postmaster@sandbox24216db2643d4a35bd31139a76c30fb4.mailgun.org',
        pass: '83b0b8c885dd975b0d96dca90932f0b2'
    }
};
var transporter=nodemailer.createTransport(smtpConfig);/*??*/
var Db=require('./Database');

var exp = { 
  'register' : function(req,res){
			if(req.body.email.length<5 || req.body.password.length<5){
				res.end(JSON.stringify({message: 'username and password . length need >= 5'}))
				return;
			}
      Db.db.collection('users').find({'email':req.body.email}).count(function(err,cnt){
        if(err){
					console.log(err);
					res.end(JSON.stringify({message: 'sth went wrong'}));
					return;
				}
				if(cnt){
          res.end(JSON.stringify({message: 'the user exists'}))
					return;
        }
        else{
          var key=gen();
					sendEmail({
						from: 'xueba founder',
						to: req.body.email,
						subject: 'Verify Email',
						text: '/verify?key='+key+'&email='+req.body.email,
						do_after_sent: function(){	
              Db.db.collection('users').insert({'email':req.body.email,'password':req.body.password,'nickname':req.body.nickname,'verified': false});
              Db.db.collection('VER_KEY').insert({'email':req.body.email,'key':key});
              res.end(JSON.stringify({success: true}));
							return;
						}
					},function(errmessage){
						res.end(JSON.stringify({message: errmessage}))
						return;
					})
        }
    })
  },
  'login' : function(req,res, is_login){
		if(is_login){
			res.end(JSON.stringify({message: 'already login'}))
			return;
		}
    Db.db.collection('users').find({'email':req.body.email,'password':req.body.password}).count(function(err,cnt){
				if(err){
					console.log(err);
					res.end(JSON.stringify({message: 'sth went wrong!'}))
					return;
				}
        if(!cnt){
          res.end(JSON.stringify({message: 'this user is not exist or password wrong'}));
					return;
        }
        else{
					var token = gen();
					res.cookie('token',token,{secure: false,httpOnly: false,encode: String});
					res.cookie('email',req.body.email,{secure: false,httpOnly: false,encode: String});
					res.cookie('ip',req.connection.remoteAddress,{secure: false, httpOnly: false,encode:String});
					exp.key.push({token: token, email: req.body.email, ip: req.connection.remoteAddress})
          res.end(JSON.stringify({success: true}));
					return;
        }
    })
  },
  'verify' : function(req,res){
    var key=req.query.key;
    var email=req.query.email;
    var cursor=Db.db.collection('VER_KEY').find({'email':email,'key':key});
    cursor.toArray(function(err,docs){
        if(err)
            {console.log(err);res.end({message: 'sth went wrong!'}); return;}
        else{
            if(docs.length!=1){
                res.end(JSON.stringify({message :"cant find this email||email>=2||!key"}));
								return;
            }
            else{
                var fd=Db.db.collection('users').find({'email':email});
                fd.toArray(function(err,cb){
                    if(cb.length==1){
                        cb=cb[0];
                        var ued=Object.assign({},cb);
                        ued.verified=true;
                        Db.db.collection('users').update(cb,ued);
                        Db.db.collection('VER_KEY').remove(docs[0]);
                        res.end(JSON.stringify({success: true}));
												return;
                    }
                    else{
                        res.end(JSON.stringify({messsage: "key email !in userDB"}));
												return;
                    }
                })
            }
        }
    });

  },
  'logout' : function(req,res, is_login){
		if(!is_login){
			res.end(JSON.stringify({message: 'you haven\'t login'}))
			return;
		}
    var token=exp.key.forEach(function(element,index){
        if(element.token===req.cookies.key){
            exp.key.splice(index,1);
            res.end(JSON.stringify({success: true}));
						return;
        }
    })
  },
  'key' :[],
	'resend': function(req,res,is_login){
		var cursor = Db.db.collection('VER_KEY').find({email: req.cookies['email']})
		cursor.toArray(function(err, docs){
			if(err){
				console.log(err);
				res.end(JSON.stringify({message: 'error occured'}))
				return;
			}
			if(docs.length!==1){
				res.end(JSON.stringify({message: 'you are verified or sth wrong'}))
				return;
			}
			if(is_login){
				sendEmail({
					from: 'xueba founder',
					to: req.cookies['email'],
					subject: 'Verify Email(Resent)',
					text:  '/verify?key='+docs['key']+'&email='+req.body.email,
					do_after_sent: function(){
          	res.end(JSON.stringify({success: true}));	
						return;
					} 
				},function(errmessage){
					res.end(JSON.stringify({message: errmessage}))
					return;
				})
			}else{
				res.end(JSON.stringify({message: 'not login yet'}));
				return;
			}
		})
	}
}

function gen(){
    var all="0123456789qweasdZSzxcvbnfghrtyuiojklmpQAWXEDCFRVTGYBHNUJIMOKLP".split("");
    var result="";
    for(var i=0;i<20;i++){
        result+=all[parseInt(Math.random()*all.length)];
    }
    return result;
}

function sendEmail(details, callback_err){
				var mailDetail={
					from: details['from'],
					to: details['to'],
					subject: details['subject'],
					text: details['text']
				}
				transporter.sendMail(mailDetail,function(err, info){
					if(err){
						console.log(err);
						callback_err('sth went wrong!')
						return;
					}
					details['do_after_sent']();
				})
}

module.exports = exp;
